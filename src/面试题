1、 什么是闭包？
闭包是指有权访问另一个函数作用域中变量的函数。
2、 怎么创建闭包？
主要方式是在一个函数中创建另一个函数，通过另一个函数访问这个函数的的局部变量。
3、 闭包的特性？
    1、 函数内嵌套函数。
    2、 内部函数可以引用外层函数的变量。
    3、 外层函数的变量不会被垃圾回收机制回收。
4、 谈谈你对闭包的理解？
    优点： 1、 可以读取函数内部的变量。
          2、 外层函数的变量始终保持在内存中，即闭包可以使得它的诞生环境一直存在。
          3、 封装对象的私有属性和方法。
    缺点： 1、外层函数的变量常驻内存，增大内存使用量。
          2、 使用不当会导致内存泄露。
5、 谈谈你对作用域链的理解？
    作用域就是变量和函数的可访问范围，控制着变量和函数的可见性和生命周期。
6、 谈谈原型、原型链？ 他们有什么特点？
    原型： 每个对象都会有一个prototype的属性。
    原型链： 访问对象属性时，如果不存在，就去他的原型中查找。而原型又有自己的原型，于是一直找下去。
7、 事件代理？（原理是事件冒泡）
    把原本需要绑定的事件委托给父元素，让父元素担当监听的任务。
    好处： 1、 节省内存空间，减少事件注册，新增子对象自动绑定事件。
8、 this理解？
    指向函数的直接调用者。
9、 事件模型？
    冒泡型： 子元素先触发，父元素后触发。 stopPropagation() | e.cancelBubble = true
    捕获型： 父元素先触发，子元素后触发。 preventDefault() | window.event.returnValue = false
10、 new主要干了什么？   ！！！！！！！！！！！！！！！！！
    创建空对象
11、 ajax原理？
    ajax相当于在浏览器和服务器之间添加了一个中间层，通过XMLHttpRequest向服务器发请求，从服务器获取数据。
10、 如何解决跨域？
    jsonp, cors, iframe, window.name, window.postMessage
11、 模块化开发如何做？
    立即执行函数，不暴露私有成员。
12、 script标签async和defer的区别？都是异步加载js文件，但是：
    async： 能保证执行顺序，defer不能保证js文件的执行顺序。
13、 哪些操作会导致内存泄露？
    闭包使用不当，setTimeout第一个参数使用字符串而不是函数。
14、 xml与json的区别？
    1、 xml体积大于json
    2、 json于js交互更加方便。xml解析比较麻烦。
    3、 xml对数据的描述比json好
    4、 json速度快于xml
15、 NodeJS优缺点？
    优点、 高并发
    缺点、 只支持单核CPU，可靠性低。（一旦代码某个环节崩溃，整个系统崩溃）
16、 严格模式限制？
    不能使用with语句。变量必须声明后使用。函数不能有同名属性。禁止this指向全局变量。

